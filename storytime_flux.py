#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""Storytime.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RQ5PpGTq24NgCQP6K07Ml9vuAiWHvpDI

Pip requirements
"""

#!pip install diffusers chatterbox-tts transformers accelerate torchaudio ffmpeg-python bitsandbytes sentencepiece
#!pip uninstall -y diffusers
#!pip install diffusers

"""Example story"""

# source: https://www.gutenberg.org/cache/epub/67098/pg67098.txt
story = """
Rumpelstiltskin

A fairy tale by the Brothers Grimm

There was once a miller who was poor, but he had one beautiful daughter. It happened one day that he came to speak with the king, and, to give himself consequence, he told him that he had a daughter who could spin gold out of straw.
The king said to the miller: "That is an art that pleases me well; if thy daughter is as clever as you say, bring her to my castle to-morrow, that I may put her to the proof."
When the girl was brought to him, he led her into a room that was quite full of straw, and gave her a wheel and spindle, and said: "Now set to work, and if by the early morning thou hast not spun this straw to gold thou shalt die."
And he shut the door himself, and left her there alone.
And so the poor miller's daughter was left there sitting, and could not think what to do for her life: she had no notion how to set to work to spin gold from straw, and her distress grew so great that she began to weep.
Then all at once the door opened, and in came a little man, who said: "Good evening, miller's daughter; why are you crying?"

"Oh!" answered the girl, "I have got to spin gold out of straw, and I don't understand the business." Then the little man said: "What will you give me if I spin it for you?" - "My necklace," said the girl.
The little man took the necklace, seated himself before the wheel, and whirr, whirr, whirr! three times round and the bobbin was full; then he took up another, and whirr, whirr, whirr! three times round, and that was full;
and so he went on till the morning, when all the straw had been spun, and all the bobbins were full of gold.

At sunrise came the king, and when he saw the gold he was astonished and very much rejoiced, for he was very avaricious.
He had the miller's daughter taken into another room filled with straw, much bigger than the last, and told her that as she valued her life she must spin it all in one night.
The girl did not know what to do, so she began to cry, and then the door opened, and the little man appeared and said: "What will you give me if I spin all this straw into gold?"

"The ring from my finger," answered the girl. So the little man took the ring, and began again to send the wheel whirring round, and by the next morning all the straw was spun into glistening gold.
The king was rejoiced beyond measure at the sight, but as he could never have enough of gold, he had the miller's daughter taken into a still larger room full of straw, and said: "This, too, must be spun in one night, and if you accomplish it you shall be my wife."
For he thought: "Although she is but a miller's daughter, I am not likely to find any one richer in the whole world."
As soon as the girl was left alone, the little man appeared for the third time and said: "What will you give me if I spin the straw for you this time?" - "I have nothing left to give," answered the girl.
"Then you must promise me the first child you have after you are queen," said the little man. "But who knows whether that will happen?" thought the girl;
but as she did not know what else to do in her necessity, she promised the little man what he desired, upon which he began to spin, until all the straw was gold.
And when in the morning the king came and found all done according to his wish, he caused the wedding to be held at once, and the miller's pretty daughter became a queen.

In a year's time she brought a fine child into the world, and thought no more of the little man; but one day he came suddenly into her room, and said: "Now give me what you promised me."
The queen was terrified greatly, and offered the little man all the riches of the kingdom if he would only leave the child; but the little man said: "No, I would rather have something living than all the treasures of the world."
Then the queen began to lament and to weep, so that the little man had pity upon her. "I will give you three days," said he, "and if at the end of that time you cannot tell my name, you must give up the child to me."

Then the queen spent the whole night in thinking over all the names that she had ever heard, and sent a messenger through the land to ask far and wide for all the names that could be found.
And when the little man came next day, (beginning with Caspar, Melchior, Balthazar) she repeated all she knew, and went through the whole list, but after each the little man said: "That is not my name."
The second day the queen sent to inquire of all the neighbours what the servants were called, and told the little man all the most unusual and singular names, saying:
"Perhaps you are called Roast-ribs, or Sheepshanks, or Spindleshanks?" But he answered nothing but: "That is not my name."

The third day the messenger came back again, and said:
"I have not been able to find one single new name; but as I passed through the woods I came to a high hill, and near it was a little house, and before the house burned a fire, and round the fire danced a comical little man, and he hopped on one leg and cried:

"Today do I bake, tomorrow I brew, The day after that the queen's child comes in; And oh! I am glad that nobody knew That the name I am called is Rumpelstiltskin!"

You cannot think how pleased the queen was to hear that name, and soon afterwards, when the little man walked in and said:
"Now, Mrs. Queen, what is my name?" she said at first "Are you called Jack?" - "No," answered he. "Are you called Harry?" she asked again. "No," answered he.
And then she said": "Then perhaps your name is Rumpelstiltskin?"

"The devil told you that! the devil told you that!" cried the little man, and in his anger he stamped with his right foot so hard that it went into the ground above his knee;
then he seized his left foot with both his hands in such a fury that he split in two, and there was an end of him.
"""

"""Header"""

import os
import torch
import torchaudio as ta
import ffmpeg
from chatterbox.tts import ChatterboxTTS
from diffusers import DiffusionPipeline
from diffusers import FluxPipeline
from diffusers import BitsAndBytesConfig as DiffusersBitsAndBytesConfig, FluxTransformer2DModel, FluxPipeline
from transformers import BitsAndBytesConfig as BitsAndBytesConfig, T5EncoderModel

from transformers import T5EncoderModel, BitsAndBytesConfig
lines = [line.strip() for line in story.split("\n") if line.strip()]
lines = [line for line in lines if len(line)>0] # remove empty lines.

# Device configuration
device = "cuda" if torch.cuda.is_available() else "mps" if torch.backends.mps.is_available() else "cpu"
print(f"Using device: {device}")

"""Functions"""

def generate_images_lowvram(lines):
    print("Loading FLUX...")
    #ckpt_id = "black-forest-labs/FLUX.1-dev"
    ckpt_id = "black-forest-labs/FLUX.1-schnell"
    pipe = FluxPipeline.from_pretrained(ckpt_id,torch_dtype=torch.bfloat16,)
    #pipe.vae.enable_tiling()
    #pipe.vae.enable_slicing()
    #pipe.enable_model_cpu_offload()
    pipe.enable_sequential_cpu_offload() # offloads modules to CPU on a submodule level (rather than model level)
    for idx, line in enumerate(lines):
        print(f"Generating image for line {idx+1}/{len(lines)}: {line[:50]}...")
        # Generate image.
        image_file = f"line-{idx:04d}.png"
        prompt = "Children's book illustration for the following text: " + line
        #image = pipe(prompt=prompt, height=768,width=1360, max_sequence_length=512, generator=torch.Generator("cpu").manual_seed(0)).images[0]
        image = pipe(prompt=prompt, guidance_scale=0.0, num_inference_steps=4, height=768,width=1360, max_sequence_length=512, generator=torch.Generator("cpu").manual_seed(0)).images[0]
        image.save(image_file)

def generate_voices(lines):
    # Load models
    print("Loading Chatterbox-TTS...")
    tts_model = ChatterboxTTS.from_pretrained(device=device)
    # generate a reference voice
    text = "Ezreal and Jinx teamed up with Ahri, Yasuo, and Teemo to take down the enemy's Nexus in an epic late-game pentakill."
    wav = tts_model.generate(text)
    ta.save("reference.wav", wav, tts_model.sr)
    for idx, line in enumerate(lines):
        print(f"Generating voice for line {idx+1}/{len(lines)}: {line[:50]}...")
        # Generate audio
        audio_file = f"line-{idx:04d}.wav"
        wav = tts_model.generate(line, audio_prompt_path="reference.wav", exaggeration=1)
        #wav = tts_model.generate(line, audio_prompt_path="reference.wav", exaggeration=0.25, cfg_weight=0.25)
        ta.save(audio_file, wav, tts_model.sr)
    os.remove("reference.wav")

def combine_lines(lines):
    video_files = []
    print("Combining voice and image for each line...")

    for idx, line in enumerate(lines):
        print(f"Processing line {idx+1}/{len(lines)}: {line[:50]}...")

        # File paths
        image_file = f"line-{idx:04d}.png"
        audio_file = f"line-{idx:04d}.wav"
        video_file = f"line-{idx:04d}.mp4"

        # Verify files exist
        if not os.path.exists(image_file):
            print(f"Error: Image file {image_file} not found!")
            continue
        if not os.path.exists(audio_file):
            print(f"Error: Audio file {audio_file} not found!")
            continue

        # Create input streams
        video_input = ffmpeg.input(image_file, loop=1, framerate=24)
        audio_input = ffmpeg.input(audio_file)

        # Combine and output - FIXED: Use None for boolean flags
        try:
            (
                ffmpeg.output(
                    video_input,
                    audio_input,
                    video_file,
                    vcodec='libx264',
                    acodec='aac',
                    pix_fmt='yuv420p',
                    shortest=None,  # Fixed: Use None instead of True
                    crf=20,
                    preset='medium',
                    #vf='scale=512:512'
                )
                .run(capture_stderr=True)
            )
            video_files.append(video_file)
            print(f"Created video segment: {video_file}")
            os.remove(image_file)
            os.remove(audio_file)
        except ffmpeg.Error as e:
            print('FFmpeg command failed:')
            print('FFmpeg stderr:')
            print(e.stderr.decode('utf8'))
            raise


    # Combine all videos
    print("Combining all segments into final video...")
    with open("concat_list.txt", "w") as f:
        f.writelines([f"file '{v}'\n" for v in video_files])

    (
        ffmpeg
        .input("concat_list.txt", format='concat', safe=0)
        .output("full_story.mp4", c='copy')
        .run(overwrite_output=True)
    )
    for idx, line in enumerate(lines):
      os.remove(f"line-{idx:04d}.mp4")
    os.remove("concat_list.txt")

"""Run everything"""

generate_images_lowvram(lines)
generate_voices(lines)
combine_lines(lines)
print("Done! Final output: full_story.mp4")
